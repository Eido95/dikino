# kubectl exec --tty -i kafka-client --namespace kafka-system -- bash

#     PRODUCER:
#         kafka-console-producer.sh \
#             --producer.config /tmp/client.properties \
#             --broker-list kafka-controller-0.kafka-controller-headless.kafka-system.svc.cluster.local:9092,kafka-controller-1.kafka-controller-headless.kafka-system.svc.cluster.local:9092,kafka-controller-2.kafka-controller-headless.kafka-system.svc.cluster.local:9092 \
#             --topic test

#     CONSUMER:
#         kafka-console-consumer.sh \
#             --consumer.config /tmp/client.properties \
#             --bootstrap-server kafka.kafka-system.svc.cluster.local:9092 \
#             --from-beginning \
#             --property print.key=true \
#             --topic test
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-client-properties
  namespace: kafka-system
data:
  client.properties: |
    bootstrap.servers=kafka.kafka-system.svc.cluster.local
    key.serializer=org.apache.kafka.common.serialization.StringSerializer
    value.serializer=org.apache.kafka.common.serialization.StringSerializer
    security.protocol=SASL_PLAINTEXT
    sasl.mechanism=SCRAM-SHA-256
    sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="root" password="w43Pw4Q9cb";
---
apiVersion: v1
kind: Pod
metadata:
  name: kafka-client
  namespace: kafka-system
spec:
  containers:
  - name: kafka-client
    image: docker.io/bitnami/kafka:3.6.1-debian-11-r0
    command: ["sleep", "infinity"]
    volumeMounts:
    - name: config-volume
      mountPath: /tmp
  restartPolicy: Never
  volumes:
  - name: config-volume
    configMap:
      name: kafka-client-properties
